// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // provider = "prisma-erd-generator"
  // output   = "./erd.svg"
}

model Enterprize {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  email         String     @unique
  name          String     @db.VarChar(255)
  photo         String?
  telegramToken String?    @unique
  Agents        Agent[]
  Tickets       Ticket[]
  Chats         Chat[]
  Customers     Customer[]
}

model Agent {
  id           Int         @id @default(autoincrement())
  googleId     String      @unique
  name         String      @db.VarChar(255)
  email        String      @unique
  photo        String?
  isAdmin      Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Enterprize   Enterprize? @relation(fields: [enterprizeId], references: [id])
  enterprizeId Int?
  Tickets      Ticket[]
}

enum TicketStatus {
  PENDING
  ASSIGNED
  CLOSED
}

model Ticket {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Agent        Agent?       @relation(fields: [agentId], references: [id])
  agentId      Int?
  Enterprize   Enterprize   @relation(fields: [enterprizeId], references: [id])
  enterprizeId Int
  Chat         Chat         @relation(fields: [chatId], references: [id])
  chatId       Int
  status       TicketStatus @default(PENDING)
  body         String?
}

enum ChatMedium {
  TELEGRAM
  INSTAGRAM
  WHATSAPP
}

model Chat {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  ChatMedium   ChatMedium  @default(TELEGRAM)
  ChatKey      String      @unique
  Enterprize   Enterprize? @relation(fields: [enterprizeId], references: [id])
  enterprizeId Int?
  Ticket       Ticket[]
  ChatItems    ChatItem[]
  Customer     Customer    @relation(fields: [customerId], references: [id])
  customerId   Int
}

model ChatItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  Chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  body      String
  media     String
}

model Customer {
  id           Int        @id @default(autoincrement())
  Chat         Chat[]
  name         String
  email        String     @unique
  phone        String?    @unique
  Enterprize   Enterprize @relation(fields: [enterprizeId], references: [id])
  enterprizeId Int
}
